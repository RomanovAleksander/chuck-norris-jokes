{"version":3,"sources":["components/Header/Header.js","services/ApiService.js","components/FormSearch/FormSearch.js","services/LocalStorageService.js","components/FormCategory/FormCategory.js","components/FormCategories/FormCategories.js","actions/categories/actions.js","actions/categories/types.js","components/Form/Form.js","actions/jokes/actions.js","actions/jokes/types.js","components/JokeList/JokeList.js","pages/JokesPage.js","components/NotFound/NotFound.js","pages/NotFoundPage.js","components/App/App.js","components/ErrorIndicator/ErrorIndicator.js","components/ErrorBoundry/ErrorBoundry.js","reducers/jokes.js","reducers/categories.js","reducers/index.js","store.js","index.js"],"names":["Header","className","_url","errObj","url","status","message","option","fetch","this","res","ok","json","fetchData","mode","FormSearch","LocalStorage","instance","key","JSON","parse","localStorage","getItem","value","setItem","stringify","handleSearch","e","onSearchChange","props","searchText","target","setState","state","type","onChange","placeholder","minLength","required","React","Component","FormCategory","selectCategory","active","id","changeCategory","category","name","htmlFor","FormCategories","handleChange","onCategoryChange","categoriesLoaded","categoriesRequested","categoriesError","ApiService","get","then","data","catch","err","categories","slice","map","mapDispatchToProps","newCategories","payload","error","connect","loading","Form","checkInput","handleSubmit","preventDefault","jokeLoaded","jokeRequested","jokeError","jokesLoaded","jokesRequested","jokesError","onSubmit","checked","newJoke","newJokes","jokes","joke","JokesPage","NotFound","NotFoundPage","App","from","to","exact","path","component","ErrorIndicator","ErrorBoundry","hasError","children","initialState","updateJokeList","jokesList","item","idx","reducer","combineReducers","action","itemIndex","findIndex","result","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c691cc7b.chunk.js","sourcesContent":["import React from 'react';\nimport './header.scss';\n\nexport const Header = () => {\n  return (\n    <header className=\"header\">\n      <div className=\"title\">MSI 2020</div>\n      <div className=\"welcome\">\n        <span className=\"welcome__hey\">Hey!</span>\n        <span className=\"welcome__lets-try\">Letâ€™s try to find a joke for you:</span>\n      </div>\n    </header>\n  )\n};\n","class ApiService {\n  _url = 'https://api.chucknorris.io';\n\n  errObj = (url, status) => {\n    return {\n      message: `Invalid request: ${url}, status ${status}`,\n      status: status\n    };\n  };\n\n  async fetchData(url, option) {\n    const res = await fetch(`${this._url}${url}`, option);\n    if (!res.ok) {\n      throw this.errObj(`${this._url}${url}`, res.status);\n    }\n    return res.json();\n  }\n\n  async get(url) {\n    return this.fetchData(url, {\n      mode: 'cors'\n    });\n  }\n}\n\nexport default new ApiService();\n","import React from 'react';\nimport './formSearch.scss';\n\nexport default class FormSearch extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      searchText: ''\n    }\n  }\n\n  handleSearch = e => {\n    const { onSearchChange } = this.props;\n    const searchText = e.target.value;\n    this.setState({ searchText });\n    onSearchChange(searchText);\n  };\n\n  render() {\n    return (\n      <div className=\"search-wrapper\">\n        <input type=\"search\"\n               className=\"form-search\"\n               onChange={this.handleSearch}\n               placeholder=\"Free text search...\"\n               value={this.state.searchText}\n               minLength=\"3\"\n               required\n        />\n      </div>\n    );\n  }\n}\n","class LocalStorage {\n  constructor() {\n    if (LocalStorage.instance) {\n      return LocalStorage.instance\n    }\n    LocalStorage.instance = this;\n    return this;\n  }\n\n  getItem(key) {\n    return JSON.parse(localStorage.getItem(`${key}`));\n  }\n\n  setItem(key, value) {\n    return localStorage.setItem(`${key}`, JSON.stringify(value));\n  }\n}\n\nexport default new LocalStorage();\n","import React from 'react';\nimport './formCategory.scss';\n\nexport class FormCategory extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      active: ''\n    }\n  }\n\n  selectCategory = (e) => {\n    this.setState({\n      active: e.target.id\n    });\n\n    this.props.changeCategory(e);\n  };\n\n  render() {\n    const { category } = this.props;\n\n    return (\n      <>\n        <input id={category} type=\"radio\" value={category} name=\"category\"\n               onChange={this.selectCategory} required\n        />\n        <label htmlFor={category}>{category}</label>\n      </>\n    )\n  }\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport { ApiService } from '../../services';\nimport {\n  categoriesLoaded, categoriesRequested, categoriesError\n} from '../../actions/categories/actions';\nimport { FormCategory } from '../FormCategory';\n\nimport './formCategories.scss';\n\nclass FormCategories extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      category: ''\n    }\n  }\n\n  componentDidMount() {\n    const {\n      categoriesLoaded, categoriesRequested, categoriesError\n    } = this.props;\n\n    categoriesRequested();\n    ApiService.get('/jokes/categories')\n      .then((data) => categoriesLoaded(data))\n      .catch((err) => {\n        categoriesError(err)\n      });\n  }\n\n  handleChange = e => {\n    const { onCategoryChange } = this.props;\n    const category = e.target.value;\n    this.setState({ category });\n    onCategoryChange(category);\n  };\n\n  render() {\n    const { categories } = this.props;\n    return (\n      <div className=\"categories-list\">\n        {\n          categories.slice(0, 4).map((category) => {\n            return (\n              <div key={category} className=\"categories-list__category\">\n                <FormCategory category={category} changeCategory={this.handleChange}/>\n              </div>\n            )\n          })\n        }\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  categoriesLoaded,\n  categoriesRequested,\n  categoriesError\n};\n\nconst mapStateToProps = state => ({\n  categories: state.categories.categories,\n  loading: state.categories.loading,\n  error: state.categories.error\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormCategories);\n","import {\n  FETCH_CATEGORIES_FAILURE,\n  FETCH_CATEGORIES_REQUEST,\n  FETCH_CATEGORIES_SUCCESS\n} from './types';\n\nconst categoriesRequested = () => {\n  return {\n    type: FETCH_CATEGORIES_REQUEST\n  }\n};\n\nconst categoriesLoaded = (newCategories) => {\n  return {\n    type: FETCH_CATEGORIES_SUCCESS,\n    payload: newCategories\n  }\n};\n\nconst categoriesError = (error) => {\n  return {\n    type: FETCH_CATEGORIES_FAILURE,\n    payload: error\n  };\n};\n\nexport {\n  categoriesRequested,\n  categoriesLoaded,\n  categoriesError\n};\n","export const FETCH_CATEGORIES_REQUEST = 'FETCH_CATEGORIES_REQUEST';\nexport const FETCH_CATEGORIES_SUCCESS = 'FETCH_CATEGORIES_SUCCESS';\nexport const FETCH_CATEGORIES_FAILURE = 'FETCH_CATEGORIES_FAILURE';\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ApiService } from '../../services';\nimport {\n  jokeLoaded, jokeRequested, jokeError,\n  jokesLoaded, jokesRequested, jokesError\n} from '../../actions/jokes/actions';\nimport { FormSearch } from '../FormSearch';\nimport { FormCategories } from '../FormCategories';\n\nimport './form.scss';\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      category: 'dev',\n      searchText: '',\n      active: 'random'\n    }\n  }\n\n  checkInput = (e) => {\n    this.setState({\n      active: e.target.id\n    });\n  };\n\n  onSearchChange = searchText => {\n    this.setState({ searchText });\n  };\n\n  onCategoryChange = category => {\n    this.setState({ category });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const {\n      jokeLoaded, jokeRequested, jokeError,\n      jokesLoaded, jokesRequested, jokesError\n    } = this.props;\n    const { active, category, searchText } = this.state;\n\n    switch (active) {\n      case 'random':\n        jokeRequested();\n        ApiService.get('/jokes/random')\n          .then((data) => jokeLoaded(data))\n          .catch((err) => {\n            jokeError(err)\n          });\n        break;\n      case 'category':\n        jokeRequested();\n        ApiService.get(`/jokes/random?category=${category}`)\n          .then((data) => jokeLoaded(data))\n          .catch((err) => {\n            jokeError(err)\n          });\n        break;\n      case 'search':\n        jokesRequested();\n        ApiService.get(`/jokes/search?query=${searchText}`)\n          .then((data) => jokesLoaded(data))\n          .catch((err) => {\n            jokesError(err)\n          });\n        break;\n\n      default:\n        jokeRequested();\n        ApiService.get('/jokes/random')\n          .then((data) => jokeLoaded(data))\n          .catch((err) => {\n            jokeError(err)\n          });\n    }\n  };\n\n  render() {\n    return (\n      <form className=\"jokes-form\" onSubmit={this.handleSubmit}>\n        <div className=\"jokes-form__component\">\n          <input\n            className=\"custom-checkbox\"\n            name=\"jokeType\" id=\"random\" type=\"radio\" value=\"random\"\n            checked={this.state.active === \"random\"}\n            onChange={this.checkInput} />\n          <label htmlFor=\"random\">Random</label>\n        </div>\n        <div className=\"jokes-form__component\">\n          <input\n            className=\"custom-checkbox\"\n            name=\"jokeType\" id=\"category\" type=\"radio\" value=\"category\"\n            checked={this.state.active === \"category\"}\n            onChange={this.checkInput} />\n          <label htmlFor=\"category\">From categories </label>\n          {this.state.active === \"category\" ? <FormCategories onCategoryChange={this.onCategoryChange} /> : null}\n        </div>\n        <div className=\"jokes-form__component\">\n          <input\n            className=\"custom-checkbox\"\n            name=\"jokeType\" id=\"search\" type=\"radio\" value=\"search\"\n            checked={this.state.active === \"search\"}\n            onChange={this.checkInput} />\n          <label htmlFor=\"search\">Search</label>\n          {this.state.active === \"search\" ? <FormSearch onSearchChange={this.onSearchChange} /> : null}\n        </div>\n        <button type=\"submit\" className=\"btn\">Get a joke</button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  jokeLoaded,\n  jokeRequested,\n  jokeError,\n  jokesLoaded,\n  jokesRequested,\n  jokesError\n};\n\nconst mapStateToProps = state => ({\n  loading: state.jokes.loading,\n  error: state.jokes.error\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Form);","import {\n  FETCH_JOKE_FAILURE,\n  FETCH_JOKE_REQUEST,\n  FETCH_JOKE_SUCCESS,\n  FETCH_JOKES_FAILURE,\n  FETCH_JOKES_REQUEST,\n  FETCH_JOKES_SUCCESS,\n  SEARCH_JOKES\n} from './types';\n\nconst jokeRequested = () => {\n  return {\n    type: FETCH_JOKE_REQUEST\n  }\n};\n\nconst jokeLoaded = (newJoke) => {\n  return {\n    type: FETCH_JOKE_SUCCESS,\n    payload: newJoke\n  }\n};\n\nconst jokeError = (error) => {\n  return {\n    type: FETCH_JOKE_FAILURE,\n    payload: error\n  };\n};\n\nconst jokesRequested = () => {\n  return {\n    type: FETCH_JOKES_REQUEST\n  }\n};\n\nconst jokesLoaded = (newJokes) => {\n  return {\n    type: FETCH_JOKES_SUCCESS,\n    payload: newJokes\n  }\n};\n\nconst jokesError = (error) => {\n  return {\n    type: FETCH_JOKES_FAILURE,\n    payload: error\n  };\n};\n\nconst searchJokes = (searchText) => ({\n  type: SEARCH_JOKES,\n  payload: {\n    searchText\n  }\n});\n\nexport {\n  jokeRequested,\n  jokeLoaded,\n  jokeError,\n  jokesRequested,\n  jokesLoaded,\n  jokesError,\n  searchJokes\n};\n","export const FETCH_JOKE_REQUEST = 'FETCH_JOKE_REQUEST';\nexport const FETCH_JOKE_SUCCESS = 'FETCH_JOKE_SUCCESS';\nexport const FETCH_JOKE_FAILURE = 'FETCH_JOKE_FAILURE';\n\nexport const FETCH_JOKES_REQUEST = 'FETCH_JOKES_REQUEST';\nexport const FETCH_JOKES_SUCCESS = 'FETCH_JOKES_SUCCESS';\nexport const FETCH_JOKES_FAILURE = 'FETCH_JOKES_FAILURE';\n\nexport const SEARCH_JOKES = 'SEARCH_JOKES';\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport './jokeList.scss';\n\nconst JokeList = ({ jokes, loading, error }) => {\n  if (loading) {\n    return <div>Loading...</div>\n  }\n\n  if (jokes) {\n    return (\n      <div className=\"joke-list\">\n        {\n          jokes.map((joke) => {\n            return (\n              <div key={joke.id}>\n                {joke.value}\n              </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n};\n\nconst mapDispatchToProps = {\n\n};\n\nconst mapStateToProps = state => ({\n  jokes: state.jokes.jokes,\n  loading: state.jokes.loading,\n  error: state.jokes.error\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JokeList);\n","import React from 'react';\nimport { Header } from '../components/Header/Header';\nimport Form from '../components/Form/Form';\nimport JokeList from '../components/JokeList/JokeList';\n\nexport const JokesPage = () => {\n  return (\n    <>\n      <div className=\"main-container\">\n        <Header/>\n        <Form/>\n        <JokeList/>\n      </div>\n      <div className=\"favourite-container\">\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './notFound.scss'\n\nexport const NotFound = () => {\n  return (\n    <div className=\"not-found\">\n      Not Found\n    </div>\n  );\n};\n","import React from 'react';\nimport { NotFound } from '../components/NotFound';\n\nexport const NotFoundPage = () => {\n  return (\n   <NotFound />\n  );\n};\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport {JokesPage, NotFoundPage} from '../../pages';\n\nimport './app.scss';\n\nconst App = () => {\n  return (\n    <div className=\"wrapper\">\n      <Switch>\n        <Redirect from=\"/\"\n                  to=\"/jokes\"\n                  exact\n        />\n        <Route path=\"/jokes\" component={JokesPage} />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </div>\n  )\n};\n\nexport default App;\n","import React from 'react';\nimport './errorIndicator.scss';\n\nexport const ErrorIndicator = ({ status }) => {\n  return (\n    <>\n    <div className=\"error-indicator\">\n      Ops... Something went wrong\n      {status &&  <p>Try reload the page</p>}\n    </div>\n    </>\n  )\n};\n","import React from 'react';\nimport { ErrorIndicator } from '../ErrorIndicator';\n\nexport class ErrorBoundry extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      hasError: false\n    }\n  }\n\n  componentDidCatch() {\n    this.setState({ hasError: true })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />\n    }\n\n    return this.props.children;\n  }\n}\n","import {\n  FETCH_JOKE_REQUEST,\n  FETCH_JOKE_SUCCESS,\n  FETCH_JOKE_FAILURE,\n  FETCH_JOKES_REQUEST,\n  FETCH_JOKES_SUCCESS,\n  FETCH_JOKES_FAILURE,\n  SEARCH_JOKES\n} from '../actions/jokes/types';\n\nconst initialState = {\n  jokes: [],\n  joke: {},\n  searchText: '',\n  loading: false,\n  error: null\n};\n\nconst updateJokeList = (jokesList, item, idx) => {\n  if (idx === -1) {\n    return [\n      ...jokesList,\n      item\n    ]\n  }\n  return [\n    ...jokesList.slice(0, idx),\n    item,\n    ...jokesList.slice(idx + 1)\n  ]\n};\n\nexport const jokes = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case FETCH_JOKE_REQUEST:\n      return {\n        ...state,\n        joke: {},\n        loading: true,\n        error: null\n      };\n    case FETCH_JOKE_SUCCESS:\n      const { jokes } = state;\n      const itemIndex = jokes.findIndex((item) => item.id === payload.id);\n\n      return {\n        ...state,\n        jokes: updateJokeList(jokes, payload, itemIndex),\n        joke: payload,\n        loading: false,\n        error: null\n      };\n    case FETCH_JOKE_FAILURE:\n      return {\n        ...state,\n        jokes: [],\n        joke: {},\n        loading: false,\n        error: payload\n      };\n    case FETCH_JOKES_REQUEST:\n      return {\n        ...state,\n        joke: {},\n        loading: true,\n        error: null\n      };\n    case FETCH_JOKES_SUCCESS:\n      return {\n        ...state,\n        jokes: [...state.jokes, ...payload.result],\n        loading: false,\n        error: null\n      };\n    case FETCH_JOKES_FAILURE:\n      return {\n        ...state,\n        jokes: [],\n        loading: false,\n        error: payload\n      };\n    case SEARCH_JOKES:\n      return {\n        ...state,\n        searchText: payload.searchText\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  FETCH_CATEGORIES_REQUEST,\n  FETCH_CATEGORIES_SUCCESS,\n  FETCH_CATEGORIES_FAILURE\n} from '../actions/categories/types';\n\nconst initialState = {\n  categories: [],\n  loading: true,\n  error: null\n};\n\nexport const categories = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case FETCH_CATEGORIES_REQUEST:\n      return {\n        ...state,\n        categories: [],\n        loading: true,\n        error: null\n      };\n    case FETCH_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        categories: payload,\n        loading: false,\n        error: null\n      };\n    case FETCH_CATEGORIES_FAILURE:\n      return {\n        ...state,\n        categories: [],\n        loading: false,\n        error: payload\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { jokes } from './jokes';\nimport { categories } from './categories';\n\nexport const reducer = combineReducers({\n  jokes: jokes,\n  categories: categories,\n});\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducer } from './reducers';\n\nexport const store = createStore(\n  reducer,\n  composeWithDevTools()\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './components/App';\nimport { ErrorBoundry } from './components/ErrorBoundry';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}